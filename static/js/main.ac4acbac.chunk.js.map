{"version":3,"sources":["components/Header/HeaderText/HeaderText.jsx","components/Header/Header.jsx","components/Main/content/CreateTask/CreateTask.jsx","components/Main/content/TaskList/_TaskHeader/TaskHeader.jsx","components/Main/content/TaskList/__Task/Task.jsx","components/Main/content/TaskList/TaskList.jsx","store/content/content.js","components/Main/content/Content.jsx","components/Main/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderText","className","Header","CreateTask","props","onClick","TaskHeader","text","mod","Task","editTasks","id","draggable","TaskList","arr","tasks","map","e","title","del","length","backlog","inProgress","completed","basket","currentTask","currentBoard","makeAutoObservable","this","value","document","querySelector","update","JSON","parse","stringify","push","target","classList","toggle","console","log","parentElement","getAttribute","contains","board","task","find","i","textContent","style","boxShadow","background","preventDefault","currentIndex","indexOf","splice","index","observer","content","onDragStart","dragStartHandler","onDragLeave","dragLeaveHandler","onDragEnd","dragEndHandler","onDragOver","dragOverHandler","onDrop","dropHandler","clickHandler","createTask","deleteBasket","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac4acbac.chunk.js","sourcesContent":["import './HeaderText.css';\r\n\r\nconst HeaderText = () => {\r\n  return (\r\n    <div className=\"HeaderText\">\r\n      <h1>Канбан-доска</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderText;\r\n","import './Header.css';\r\nimport HeaderText from './HeaderText/HeaderText.jsx';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <div></div>\r\n      <HeaderText />\r\n      <div></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './CreateTask.css';\r\n\r\nconst CreateTask = (props) => {\r\n  // console.log(document.querySelector('input'));\r\n  // const value = document.querySelector('input').value;\r\n\r\n  return (\r\n    <div className=\"CreateTask\">\r\n      <div className=\"h1\">\r\n        <h1>Новая задача</h1>\r\n      </div>\r\n      <div className=\"input\">\r\n        <div></div>\r\n        <input></input>\r\n        <button onClick={() => props.onClick()}>+ Добавить</button>\r\n        <div></div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import './TaskHeader.css';\r\n\r\nconst TaskHeader = (props) => {\r\n  let text;\r\n  switch (props.mod) {\r\n    case 'backlog':\r\n      text = 'Беклог';\r\n      break;\r\n    case 'inProgress':\r\n      text = 'В процессе';\r\n      break;\r\n    case 'completed':\r\n      text = 'Готово';\r\n      break;\r\n    case 'basket':\r\n      text = 'Корзина';\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <div\r\n      className={\r\n        props.className +\r\n        '__TaskHeader ' +\r\n        props.className +\r\n        '__TaskHeader_' +\r\n        props.mod\r\n      }\r\n    >\r\n      <div>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHeader;\r\n","import './Task.css';\r\n\r\nconst Task = (props) => {\r\n  if (!(props.editTasks === props.id))\r\n    return (\r\n      <div\r\n        draggable={true}\r\n        className={\r\n          props.className + '__Task ' + props.className + '__Task_' + props.mod\r\n        }\r\n        id={props.id}\r\n        text={props.text}\r\n      >\r\n        {props.text}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import './TaskList.css';\r\nimport TaskHeader from './_TaskHeader/TaskHeader';\r\nimport Task from './__Task/Task.jsx';\r\n\r\nconst TaskList = (props) => {\r\n  const className = props.className;\r\n\r\n  const arr = props.tasks.map((e) => {\r\n    return (\r\n      <Task\r\n        className=\"TaskList\"\r\n        mod={className}\r\n        key={e.id}\r\n        id={e.id}\r\n        text={e.title}\r\n      />\r\n    );\r\n  });\r\n\r\n  let del = null;\r\n  if (className === 'basket') {\r\n    if (arr.length) {\r\n      del = (\r\n        <button className=\"deleteBtn\" onClick={() => props.onClick()}>\r\n          Очистить\r\n        </button>\r\n      );\r\n    } else {\r\n      del = (\r\n        <button className=\"deleteBtn disabled\" onClick={() => props.onClick()}>\r\n          Очистить\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={className} className={'TaskList TaskList_' + className}>\r\n      <TaskHeader className=\"TaskList\" mod={className} />\r\n      {arr}\r\n      {del}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\nclass Content {\r\n  tasks = {\r\n    backlog: [\r\n      { id: '1', title: 'Пойти в магазин' },\r\n      { id: '2', title: 'Выкинуть мусор' },\r\n    ],\r\n    inProgress: [\r\n      { id: '3', title: 'Покормить кота' },\r\n      { id: '4', title: 'Покормить слона' },\r\n    ],\r\n    completed: [\r\n      { id: '5', title: 'Поспать' },\r\n      { id: '6', title: 'Поесть' },\r\n    ],\r\n    basket: [\r\n      { id: '7', title: 'Купить дом' },\r\n      { id: '8', title: 'Купить мусор' },\r\n    ],\r\n  };\r\n\r\n  // tasks2 = [\r\n  //   {},\r\n  //   {},\r\n  //   {},\r\n  //   {},\r\n  // ]\r\n\r\n  id = 8;\r\n  currentTask = null;\r\n  currentBoard = null;\r\n  editTasks = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createTask() {\r\n    let value = document.querySelector('input').value;\r\n    if (!value) {\r\n      return;\r\n    }\r\n    const update = JSON.parse(JSON.stringify(this.tasks.backlog));\r\n    update.push({\r\n      title: value,\r\n      id: ++this.id,\r\n    });\r\n    this.tasks.backlog = update;\r\n    value = '';\r\n  }\r\n\r\n  deleteBasket() {\r\n    this.tasks.basket = [];\r\n  }\r\n\r\n  clickHandler(e) {\r\n    if (!this.editTasks && !e.target.classList.toggle('edit')) {\r\n      console.log(e.target.parentElement.getAttribute('id'));\r\n      this.editTasks = e.target.parentElement.getAttribute('id');\r\n    }\r\n  }\r\n\r\n  changeHadler(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  dragStartHandler(e) {\r\n    if (!e.target.classList.contains('TaskList__Task')) {\r\n      return;\r\n    }\r\n    const board = e.target.parentElement.getAttribute('id');\r\n    const task = this.tasks[board].find(\r\n      (i) => i.title === e.target.textContent\r\n    );\r\n    this.currentTask = task;\r\n    this.currentBoard = board;\r\n  }\r\n\r\n  dragLeaveHandler(e) {\r\n    const task = e.target;\r\n    if (!task.classList.contains('TaskList__Task')) {\r\n      return;\r\n    }\r\n    task.style.boxShadow = 'none';\r\n    task.style.background = 'white';\r\n  }\r\n\r\n  dragEndHandler(e) {\r\n    const task = e.target;\r\n    if (!task.classList.contains('TaskList__Task')) {\r\n      return;\r\n    }\r\n    task.style.boxShadow = 'none';\r\n    task.style.background = 'white';\r\n  }\r\n\r\n  dragOverHandler(e) {\r\n    e.preventDefault();\r\n    const task = e.target;\r\n    if (!task.classList.contains('TaskList__Task')) {\r\n      return;\r\n    }\r\n    task.style.boxShadow = '0 2px 3px grey';\r\n    task.style.background = 'lightGrey';\r\n  }\r\n\r\n  dropHandler(e) {\r\n    e.preventDefault();\r\n    if (\r\n      !(\r\n        e.target.classList.contains('TaskList__Task') ||\r\n        e.target.classList.contains('TaskList') ||\r\n        e.target.classList.contains('deleteBtn')\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const update = JSON.parse(JSON.stringify(this.tasks));\r\n    const tasks = this.tasks;\r\n\r\n    const currentTask = this.currentTask;\r\n    const currentBoard = this.currentBoard;\r\n    const currentIndex = tasks[currentBoard].indexOf(currentTask);\r\n\r\n    console.log(currentBoard);\r\n\r\n    update[currentBoard].splice(currentIndex, 1);\r\n\r\n    if (e.target.classList.contains('TaskList')) {\r\n      const board = e.target.getAttribute('id');\r\n      update[board].push(currentTask);\r\n      this.tasks = update;\r\n      //   tasks = tasks;\r\n      return;\r\n    }\r\n\r\n    if (e.target.classList.contains('deleteBtn')) {\r\n      const board = e.target.parentElement.getAttribute('id');\r\n      update[board].push(currentTask);\r\n      this.tasks = update;\r\n      //   tasks = tasks;\r\n      return;\r\n    }\r\n\r\n    const board = e.target.parentElement.getAttribute('id');\r\n    const task = update[board].find((i) => i.title === e.target.textContent);\r\n    const index = tasks[board].indexOf(task);\r\n\r\n    update[board].splice(index, 0, currentTask);\r\n\r\n    e.target.style.boxShadow = 'none';\r\n    e.target.style.background = 'white';\r\n    this.tasks = update;\r\n    // tasks = tasks;\r\n  }\r\n}\r\n\r\nexport default new Content();\r\n","import CreateTask from './CreateTask/CreateTask.jsx';\r\n// import { Component } from 'react';\r\nimport './Content.css';\r\nimport TaskList from './TaskList/TaskList.jsx';\r\nimport content from '../../../store/content/content.js';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Content = () => {\r\n  const tasks = content.tasks;\r\n  return (\r\n    <div\r\n      className=\"Content\"\r\n      onDragStart={(e) => content.dragStartHandler(e)}\r\n      onDragLeave={(e) => content.dragLeaveHandler(e)}\r\n      onDragEnd={(e) => content.dragEndHandler(e)}\r\n      onDragOver={(e) => content.dragOverHandler(e)}\r\n      onDrop={(e) => content.dropHandler(e)}\r\n      onClick={(e) => content.clickHandler(e)}\r\n    >\r\n      <CreateTask onClick={() => content.createTask()} />\r\n      <TaskList className=\"backlog\" tasks={tasks.backlog}></TaskList>\r\n      <TaskList className=\"inProgress\" tasks={tasks.inProgress}></TaskList>\r\n      <TaskList className=\"completed\" tasks={tasks.completed}></TaskList>\r\n      <TaskList\r\n        className=\"basket\"\r\n        tasks={tasks.basket}\r\n        onClick={() => {\r\n          content.deleteBasket();\r\n        }}\r\n      ></TaskList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Content);\r\n","import Content from './content/Content.jsx';\r\nimport './Main.css';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className=\"Main\">\r\n      <div></div>\r\n      <Content></Content>\r\n      <div></div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","// import logo from './logo.svg';\r\nimport { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header.jsx';\r\nimport Main from './components/Main/Main.jsx';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}